#!/sbin/openrc-run

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/garliccoin/.garliccoin" ]; then
	GARLICCOIND_DEFAULT_DATADIR="/var/lib/garliccoin/.garliccoin"
else
	GARLICCOIND_DEFAULT_DATADIR="/var/lib/garliccoind"
fi

GARLICCOIND_CONFIGFILE=${GARLICCOIND_CONFIGFILE:-/etc/garliccoin/garliccoin.conf}
GARLICCOIND_PIDDIR=${GARLICCOIND_PIDDIR:-/var/run/garliccoind}
GARLICCOIND_PIDFILE=${GARLICCOIND_PIDFILE:-${GARLICCOIND_PIDDIR}/garliccoind.pid}
GARLICCOIND_DATADIR=${GARLICCOIND_DATADIR:-${GARLICCOIND_DEFAULT_DATADIR}}
GARLICCOIND_USER=${GARLICCOIND_USER:-${GARLICCOIN_USER:-garliccoin}}
GARLICCOIND_GROUP=${GARLICCOIND_GROUP:-garliccoin}
GARLICCOIND_BIN=${GARLICCOIND_BIN:-/usr/bin/garliccoind}
GARLICCOIND_NICE=${GARLICCOIND_NICE:-${NICELEVEL:-0}}
GARLICCOIND_OPTS="${GARLICCOIND_OPTS:-${GARLICCOIN_OPTS}}"

name="Garliccoin Core Daemon"
description="Garliccoin cryptocurrency P2P network daemon"

command="/usr/bin/garliccoind"
command_args="-pid=\"${GARLICCOIND_PIDFILE}\" \
		-conf=\"${GARLICCOIND_CONFIGFILE}\" \
		-datadir=\"${GARLICCOIND_DATADIR}\" \
		-daemon \
		${GARLICCOIND_OPTS}"

required_files="${GARLICCOIND_CONFIGFILE}"
start_stop_daemon_args="-u ${GARLICCOIND_USER} \
			-N ${GARLICCOIND_NICE} -w 2000"
pidfile="${GARLICCOIND_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${GARLICCOIND_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${GARLICCOIND_USER}:${GARLICCOIND_GROUP}" \
	"${GARLICCOIND_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${GARLICCOIND_USER}:${GARLICCOIND_GROUP}" \
	"${GARLICCOIND_PIDDIR}"

	checkpath -f \
	-o "${GARLICCOIND_USER}:${GARLICCOIND_GROUP}" \
	-m 0660 \
	"${GARLICCOIND_CONFIGFILE}"

	checkconfig || return 1
}

checkconfig()
{
	if grep -qs '^rpcuser=' "${GARLICCOIND_CONFIGFILE}" && \
		! grep -qs '^rpcpassword=' "${GARLICCOIND_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run garliccoind."
		eerror "The setting must appear in ${GARLICCOIND_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"Garliccoin Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
